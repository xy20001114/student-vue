#配置端口号
server.port=8900
#配置项目的路径
server.servlet.context-path=/
#取消模板文件缓存
spring.thymeleaf.cache=false
#激活指定的文件
#spring.profiles.active=devs

#配置数据驱动类
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#连接的url地址
spring.datasource.url=jdbc:mysql://localhost:3306/xiaosiwork?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=UTC
#用户名
spring.datasource.username=root
#用户密码
spring.datasource.password=root
#数据源 默认的数据 HiKari
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource

#mybatis-plus输出日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#枚举处理 不同的项目扫描的不同的枚举包
#mybatis-plus.type-enums-package=com.zhaoya.scenic.enums
#mybatis-plus加载的路径
mybatis-plus.type-aliases-package=com.xueyong.springbootapi.entity
mybatis-plus.mapper-locations=classpath:/mapper/*.xml

#引入静态资源
spring.resources.static-locations=classpath:/static/

spring.freemarker.template-loader-path=classpath:/templates
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.html
spring.freemarker.settings.classic_compatible=true


#kafka地址与端口号
spring.kafka.bootstrap-servers=192.168.5.128:9092
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


redis的配置
spring.redis.host=192.168.5.128
spring.redis.port=6379
spring.redis.database=1

es的配置
spring.data.elasticsearch.cluster-name=elasticsearch
spring.data.elasticsearch.cluster-nodes=192.168.5.128:9300

#支持上传的配置
spring.servlet.multipart.enabled=true
#文件上传的大小
spring.servlet.multipart.max-file-size=2MB
#批量上传的最大请求大小
spring.servlet.multipart.max-request-size=10MB

#配置上传的路径地址
upload.path=D:/pic/
#配置访问的地址
upload.url=http://localhost:8811/img/